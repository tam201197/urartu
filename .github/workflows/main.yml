name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  check-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Check files
        run: |
          FILES_TO_CHECK=("LICENSE" "README.md" "requirements.txt" "requirements-dev.txt" "setup.py")
          MISSING_FILES=()
          for FILE in "${FILES_TO_CHECK[@]}"; do
            if [ ! -f "$FILE" ]; then
              MISSING_FILES+=("$FILE")
            fi
          done
          if [ ${#MISSING_FILES[@]} -eq 0 ]; then
            echo "All files exist."
          else
            echo "The following files are missing:"
            for MISSING_FILE in "${MISSING_FILES[@]}"; do
              echo "- $MISSING_FILE"
            done
            echo "::error::One or more files are missing."
            exit 1

  linter:
    runs-on: ubuntu-latest
    needs: check-files
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: pip install -r requirements-dev.txt
      - name: Analysing the code with pylint
        run: |
          pylint --disable=trailing-whitespace,missing-class-docstring,missing-final-newline,trailing-newlines \
                 --fail-under=9.0 \
                 $(git ls-files '*.py') || echo "::warning::Pylint check failed, but the workflow will continue."

  python-build-n-publish:
    name: Build and publish Python distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Initialize Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Build binary wheel and a source tarball
        run: python setup.py sdist
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.test_pypi_password }}
          repository_url: https://upload.pypi.org/legacy/
